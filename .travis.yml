language: cpp

compiler:
  - gcc
  - clang

env:
  global:
    - BUILD_CPR_TESTS=ON
  matrix:
    - USE_SYSTEM_CURL=ON USE_SYSTEM_CMAKE=ON
    - USE_SYSTEM_CURL=OFF USE_SYSTEM_CMAKE=ON
    - USE_SYSTEM_CURL=OFF USE_SYSTEM_CMAKE=OFF
    - USE_SYSTEM_CURL=ON USE_SYSTEM_CMAKE=OFF

matrix:
  include:
    - compiler: gcc
      env: USE_SYSTEM_CURL=OFF USE_SYSTEM_CMAKE=OFF GENERATE_COVERAGE=ON

sudo: required

before_install:
  - sudo apt-get update
  - if [ "$GENERATE_COVERAGE" == "ON" ]; then sudo pip install cpp-coveralls; fi

install:
  - sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
  - sudo apt-get update
  - sudo apt-get install g++-4.8 -y --force-yes
  - if [ "CXX" == "g++" ]; then export CXX="g++-4.8" CC="gcc-4.8"; fi
  - if [ "$USE_SYSTEM_CURL" == "OFF" ]; then sudo apt-get remove curl libcurl3; fi
  - if [ "$USE_SYSTEM_CMAKE" == "OFF" ]; then sudo apt-get remove cmake && wget http://www.cmake.org/files/v3.2/cmake-3.2.1.tar.gz && tar -xzf cmake-3.2.1.tar.gz && cd cmake-3.2.1 && ./bootstrap > /dev/null && make -j8 > /dev/null && sudo make install && cd .. && rm -rf cmake-3.2.1 cmake-3.2.1.tar.gz; else sudo apt-get install -y cmake; fi
  - if [ "$GENERATE_COVERAGE" == "ON" ]; then sudo apt-get install lcov; fi

before_script:
  - cmake --version
  - if [ "$GENERATE_COVERAGE" == "ON" ]; then cmake -DCMAKE_BUILD_TYPE=COVERAGE -LAH .; else cmake -LAH .; fi

script:
  - make
  - if [ "$GENERATE_COVERAGE" == "ON" ]; then make cpr_coverage && coveralls -i $TRAVIS_BUILD_DIR -e $TRAVIS_BUILD_DIR/CMakeFiles -e $TRAVIS_BUILD_DIR/opt; else ctest -V; fi
