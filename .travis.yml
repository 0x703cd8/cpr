language: cpp

sudo: false

compiler: clang

# gcc 4.9 default
addons: &addons
  apt:
    packages: &packages
      - g++-4.9
      - clang-format-3.7
      - python-pip
    sources: &sources
      - ubuntu-toolchain-r-test
      - llvm-toolchain-precise-3.5
      - llvm-toolchain-precise-3.6
      - llvm-toolchain-precise-3.7
      - llvm-toolchain-precise

env:
  global:
    - BUILD_CPR_TESTS=ON
    - GTEST_SHUFFLE=1
    - INSECURE_CURL=ON
    - USE_SYSTEM_CURL=ON
  matrix:
    - COMPILER=g++-4.9 CCOMPILER=gcc-4.9 GENERATE_COVERAGE=ON FORMAT_CHECK=ON

matrix:
  include:
    # gcc 4.8
    - env: COMPILER=g++-4.8 CCOMPILER=gcc-4.8
      addons:
        apt:
          packages: g++-4.8
          sources: *sources

    # gcc 5
    - env: COMPILER=g++-5 CCOMPILER=gcc-5
      addons:
        apt:
          packages: g++-5
          sources: *sources

    # Clang 3.5
    - env: COMPILER=clang++-3.5 CCOMPILER=clang-3.5
      addons:
        apt:
          packages: clang-3.5
          sources: *sources

    # Clang 3.6
    - env: COMPILER=clang++-3.6 CCOMPILER=clang-3.6
      addons:
        apt:
          packages: clang-3.6
          sources: *sources

install:
  - if [ "$GENERATE_COVERAGE" == "ON" ]; then pip install --user git+git://github.com/eddyxu/cpp-coveralls.git; fi

before_script:
  - export CXX=$COMPILER CC=$CCOMPILER
  - if [ "$BREW_CMAKE" == "ON" ]; then brew update && brew install cmake; fi
  - cmake --version
  - mkdir build
  - cd build
  - cmake -LAH ..

script:
  - make VERBOSE=1
  - ctest -V
    
after_success:
  - if [ "$GENERATE_COVERAGE" == "ON" ]; then coveralls -i 'cpr' -i 'include' -e '../include/cpr.h' --root '../' --verbose --gcov-options '\-lp' --gcov 'gcov-4.9'; fi

after_script:
  - if [ "$FORMAT_CHECK" == "ON" ]; then cd .. && ./format-check.sh; fi
